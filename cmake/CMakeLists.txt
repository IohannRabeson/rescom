# Embed resources into the target specified using Rescom.
# A file 'rescom.hpp' will be generated and will be available in your C++ code.
#
# Example usage:
# add_executable(my_target ...)
# rescom_compile(my_target my_rescom_file_path)
# In your C++:
# #include<rescom.hpp>
# std::cout << rescom::getText("key") << "\n"
#
function(rescom_compile TARGET_NAME RESCOM_FILE)
    # rescom.hpp is the file generated by Rescom
    target_sources(${TARGET_NAME} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/rescom.hpp)

    set(RESCOM_CUSTOM_TARGET_NAME rescom_compile_RunRescomFor${TARGET_NAME})
    add_custom_target(${RESCOM_CUSTOM_TARGET_NAME}
            COMMAND rescom -i ${RESCOM_FILE} -o ${CMAKE_CURRENT_BINARY_DIR}/rescom.hpp
            DEPENDS ${RESCOM_FILE} rescom
            BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/rescom.hpp
            COMMENT "Rescom ${RESCOM_FILE}..."
            )

    target_include_directories(${TARGET_NAME} PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
    set_target_properties(${TARGET_NAME} PROPERTIES CXX_STANDARD 17)
endfunction()

function(warning_as_error TARGET_NAME)
    target_compile_options(${TARGET_NAME} PRIVATE
            $<$<OR:$<CXX_COMPILER_ID:Clang>,$<CXX_COMPILER_ID:AppleClang>,$<CXX_COMPILER_ID:GNU>>:
            -Werror -Wall -Wextra>
            $<$<CXX_COMPILER_ID:MSVC>:
            /WX /W4>
            )
endfunction()

macro(add_subdirectory_if_target_not_exists TARGET_NAME)
    if (NOT TARGET ${TARGET_NAME})
        add_subdirectory(${TARGET_NAME})
    endif()
endmacro()

find_package(Git REQUIRED)

execute_process(COMMAND ${GIT_EXECUTABLE} rev-parse --short HEAD
        WORKING_DIRECTORY "${PROJECT_SOURCE_DIR}"
        OUTPUT_VARIABLE GIT_SHORT_COMMIT
        ERROR_QUIET
        OUTPUT_STRIP_TRAILING_WHITESPACE)

message(STATUS "Git short commit: ${GIT_SHORT_COMMIT}")

execute_process(COMMAND ${GIT_EXECUTABLE} submodule update --init --recursive
        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
        RESULT_VARIABLE GIT_SUBMOD_RESULT)
if(NOT GIT_SUBMOD_RESULT EQUAL "0")
    message(STATUS "git submodule update --init failed with ${GIT_SUBMOD_RESULT}, please checkout submodules")
endif()